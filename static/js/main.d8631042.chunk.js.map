{"version":3,"sources":["store/mapThemeToProps.js","components/Nav/Nav.js","store/actions/actionTypes.js","store/actions/countries.js","containers/Form/Form.js","components/Card/CountryCard.js","components/Snackbar/Snackbar.js","components/CardList/CardsList.js","containers/Layout/Layout.js","containers/CountryProfile/CountryProfile.js","App.js","store/reducers/themeSwitchReducer.js","store/reducers/fetchCountriesReducer.js","store/reducers/rootReducer.js","index.js","store/localstorage.js","logo.svg"],"names":["mapThemeToProps","state","palette","theme","currentPalette","mode","lightMode","connect","dispatch","onClick","type","withStyles","title","Object","defineProperty","fontWeight","fontSize","breakpoints","down","toolbar","minHeight","themeSwitcher","marginLeft","color","primary","contrastText","themeSwitcherText","display","props","classes","react_default","a","createElement","AppBar","Toolbar","className","Typography","variant","IconButton","Brightness2Outlined_default","fetchSuccess","res","data","fetchAllCountries","e","fetch","then","json","fetchSpecficCountry","name","fetchRegion","concat","options","fetchSpecificCountry","actionCreators","fetchCountries","_form","_formControl","form","paddingTop","up","flexFlow","width","justifyContent","formControl","maxWidth","inputLabel","input","boxShadow","backgroundColor","inputs","main","marginBottom","selectList","search","position","searchIcon","spacing","height","pointerEvents","alignItems","zIndex","insideInput","console","log","action","preventDefault","FormControl","Search_default","OutlinedInput","onChange","target","value","handleChange","placeholder","InputLabel","Select","native","root","id","style","map","option","key","_card","card","paper","margin","gridItem","Grid","item","xs","sm","md","lg","Card","country","react_router_dom","to","pathname","nativeName","flag","population","region","subRegion","subregion","capital","topLevelDomain","currencies","languages","borderCountries","borders","CardActionArea","CardMedia","component","alt","image","CardContent","gutterBottom","number_format_default","displayType","thousandSeparator","CardActions","Button","size","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","ContentProps","aria-describedby","message","cardsContainer","gridContainer","background","countryData","countries","filter","toLocaleLowerCase","includes","loading","i","push","Card_CountryCard","undefined","container","direction","justify","length","Snackbar_Snackbar","Layout","this","onMount","MuiThemeProvider","createMuiTheme","Container","minWidth","flexWrap","CssBaseline","components_Nav_Nav","containers_Form_Form","status","CardsList","Component","reduxData","CountryProfile","handleClick","_this","history","listen","location","substring","setState","_this2","_this3","Box","box","iconButton","disableRipple","disableFocusRipple","label","ArrowBack_default","ActionArea","countryInfoA","countryInfoB","currency","humanizeList","language","link","button","_countryInfoA","&:hover","hover","bottom","textDecoration","marginTop","overflow","maxHeight","alignSelf","App","react_router","exact","path","initialState","light","dark","secondary","text","darkMode","themeReducer","arguments","objectSpread","countriesReducer","reducer","combineReducers","composeEnchancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","rootReducer","applyMiddleware","Thunk","subscribe","stringify","setItem","saveState","getState","ReactDOM","render","es","src_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.d8631042.chunk.js","sourcesContent":["export const mapThemeToProps = state => {\r\n    return {\r\n        \r\n        palette: state.theme.currentPalette,\r\n        mode: state.theme.lightMode\r\n\r\n    }\r\n}\r\n\r\n\r\n    ","import React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  IconButton,\r\n  withStyles\r\n} from \"@material-ui/core\";\r\nimport Brightness from \"@material-ui/icons/Brightness2Outlined\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"../../store/actions/actionTypes\";\r\nimport { sizeHeight } from \"@material-ui/system\";\r\nimport { mapThemeToProps } from \"../../store/mapThemeToProps\";\r\n\r\nconst styles = theme => ({\r\n  title: {\r\n    fontWeight: \"600\",\r\n    fontSize: 23,\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: \"15px\",\r\n      fontWeight: \"800\"\r\n    }\r\n  },\r\n\r\n  toolbar: {\r\n    minHeight: 52,\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      minHeight: 96\r\n    }\r\n  },\r\n\r\n  themeSwitcher: {\r\n    marginLeft: \"auto\",\r\n    color: theme.palette.primary.contrastText\r\n  },\r\n\r\n  themeSwitcherText: {\r\n    fontWeight: 400,\r\n    fontSize: 16,\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"none\"\r\n    }\r\n  }\r\n});\r\n\r\nconst Nav = props => {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <div>\r\n      <AppBar color=\"primary\">\r\n        <Toolbar className={classes.toolbar}>\r\n          <Typography className={classes.title} variant=\"h4\">\r\n            Where in the world?\r\n            {}\r\n          </Typography>\r\n          <IconButton className={classes.themeSwitcher} onClick={props.onClick}>\r\n            <Brightness />\r\n            <Typography\r\n              variant=\"button\"\r\n              className={classes.themeSwitcherText}\r\n              variant=\"h6\"\r\n            >\r\n              Dark Mode\r\n            </Typography>\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onClick: () => dispatch({ type: actionTypes.SWITCH_THEME })\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapThemeToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(Nav));\r\n","export const SWITCH_THEME = 'SWITCH_THEME'\r\nexport const FETCH_BEGIN = 'FETCH_BEGIN'\r\nexport const FETCH_SUCCESS = 'FETCH_SUCCESS'\r\nexport const COUNTRY_NAME = 'COUNTRY_NAME'\r\n\r\n","import * as actionTypes from './actionTypes'\r\n\r\nexport const fetchBegin = () => {\r\n    return {\r\n        type: actionTypes.FETCH_BEGIN\r\n    }\r\n}\r\n\r\nexport const countryName = (name) => {\r\n    return {\r\n        type: actionTypes.COUNTRY_NAME,\r\n        name: name\r\n    }\r\n  \r\n}\r\n\r\nexport const fetchSuccess = ( res ) => {\r\n    return {\r\n        type: actionTypes.FETCH_SUCCESS,\r\n        data: res,\r\n    }\r\n}\r\n\r\nexport const fetchAllCountries = (e) => {\r\n    return dispatch => {\r\n        dispatch(fetchBegin())\r\n        fetch(`https://restcountries.eu/rest/v2/all`)\r\n        .then(res => res.json())\r\n        .then(res => {\r\n           \r\n            dispatch(fetchSuccess(res))\r\n        })\r\n    }\r\n}\r\n\r\nexport const fetchSpecficCountry = e => {\r\n    return dispatch => {\r\n       dispatch(countryName(e))\r\n    }\r\n}\r\n\r\nexport const fetchRegion = e => {\r\n    return dispatch => {\r\n        dispatch(fetchBegin())\r\n        fetch(`https://restcountries.eu/rest/v2/region/${e}`)\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            dispatch(fetchSuccess(res))\r\n        })\r\n    }\r\n}","import React from \"react\";\r\nimport {\r\n  Select,\r\n  OutlinedInput,\r\n  FormControl,\r\n  InputLabel\r\n} from \"@material-ui/core\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionCreators from '../../store/actions/index'\r\nimport { mapThemeToProps } from \"../../store/mapThemeToProps\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nconst options = [\"Africa\", \"Americas\", \"Asia\", \"Europe\", \"Oceania\"];\r\nconst styles = theme => ({\r\n  form: {\r\n    display: \"flex\",\r\n    paddingTop: 92,\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      paddingTop: 120,\r\n      flexFlow: \"column\"\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      paddingTop: 120,\r\n      flexFlow: \"row\",\r\n      width: \"100%\",\r\n      justifyContent: \"space-between\"\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      paddingTop: 120,\r\n      flexFlow: \"row\",\r\n      width: \"100%\",\r\n      justifyContent: \"space-between\"\r\n    },\r\n    paddingBottom: '20px'\r\n  },\r\n\r\n  formControl: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"23%\"\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"33%\"\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      maxWidth: \"100%\",\r\n      width: \"auto\"\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      width: \"20%\"\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      width: \"18%\"\r\n    }\r\n  },\r\n\r\n  inputLabel: {\r\n    color: theme.palette.primary.contrastText\r\n  },\r\n  input: {\r\n    boxShadow:\r\n      \"0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)\",\r\n    backgroundColor: mapThemeToProps.mode\r\n      ? theme.palette.primary.inputs\r\n      : theme.palette.primary.main,\r\n    color: theme.palette.primary.contrastText,\r\n    marginBottom: \"22px\"\r\n  },\r\n  selectList: {\r\n    boxShadow:\r\n      \"0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)\",\r\n    maxWidth: \"320px\",\r\n    backgroundColor: mapThemeToProps.mode\r\n      ? theme.palette.primary.inputs\r\n      : theme.palette.primary.main,\r\n    color: theme.palette.primary.contrastText\r\n  },\r\n\r\n  search: {\r\n    position: \"relative\",\r\n    marginLeft: 0,\r\n    width: \"100%\"\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing(9),\r\n    height: \"77%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    zIndex: \"1\",\r\n    color: theme.palette.primary.contrastText\r\n  },\r\n\r\n  insideInput: {\r\n    marginLeft: \"45px\"\r\n  }\r\n});\r\nconst Form = props => {\r\n\r\n  console.log('props', props)\r\n  const handleChange = (e) => {\r\n\r\n    let target = e.target.value\r\n    console.log(target, 'target')\r\n   /* props.data.filter(e => {\r\n      if(target === e.name) {\r\n        return console.log(target)\r\n      }\r\n    })\r\n  \r\n  \r\n     */\r\n      props.fetchSpecificCountry(target)\r\n\r\n  }\r\n\r\n  const handleRegionChange = (e) => {\r\n    const target = e.target.value;\r\n    \r\n  if(target === '' || target === 'undefined') {\r\n      return null\r\n    } else {\r\n        props.fetchRegion(target)\r\n    }\r\n  \r\n  }\r\n  const { classes } = props;\r\n  const { palette } = props.palette;\r\n  return (\r\n    <form action={e => e.preventDefault()} className={classes.form}>\r\n      <FormControl>\r\n        <div className={classes.search}>\r\n          <div className={classes.searchIcon}>\r\n            <Search />\r\n          </div>\r\n\r\n          <OutlinedInput\r\n          \r\n            onChange={(e) => handleChange(e)}\r\n            placeholder=\" Search for a country ...\"\r\n            className={classes.input}\r\n            classes={{ input: classes.insideInput }}\r\n          />\r\n        </div>\r\n      </FormControl>\r\n \r\n      <FormControl variant=\"outlined\" className={classes.formControl}>\r\n        <InputLabel className={classes.inputLabel}>Filter By Region</InputLabel>\r\n        <Select\r\n          onChange={handleRegionChange}\r\n          native\r\n          className={classes.selectList}\r\n          classes={{ root: classes.options }}\r\n          input={\r\n            <OutlinedInput\r\n              name=\"filter by region\"\r\n              id=\"outlined-age-native-simple\"\r\n            />\r\n          }\r\n        >\r\n          <option\r\n            value=\"\"\r\n            style={{ backgroundColor: palette.primary.main }}\r\n            classes={classes.options}\r\n          />\r\n          {options.map(option => {\r\n            return (\r\n              <option\r\n                \r\n                key={option}\r\n                style={{ backgroundColor: palette.primary.main }}\r\n                classes={classes.options}\r\n              >\r\n                {option}\r\n              </option>\r\n            );\r\n          })}\r\n        </Select>\r\n      </FormControl>\r\n    </form>\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    palette: state.theme.currentPalette,\r\n    mode: state.theme.lightMode\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchSpecificCountry: (e) => dispatch(actionCreators.fetchSpecficCountry(e)),\r\n    fetchCountries: (data) => dispatch(actionCreators.fetchAllCountries(data)),\r\n    fetchRegion: (e) => dispatch(actionCreators.fetchRegion(e))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Form));\r\n","import React from \"react\";\r\nimport NumberFormat from 'react-number-format';\r\nimport {Link} from 'react-router-dom'\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  CardActionArea,\r\n  CardMedia,\r\n  CardContent,\r\n  CardActions,\r\n  Button\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nconst styles = theme => ({\r\n  card: {\r\n    [theme.breakpoints.up(\"900\")]: {\r\n      maxWidth: 255\r\n    },\r\n    [theme.breakpoints.up(\"1200\")]: {\r\n      maxWidth: 260\r\n    },\r\n    [theme.breakpoints.up(\"1300\")]: {\r\n      maxWidth: 270\r\n    },\r\n    [theme.breakpoints.up(\"1500\")]: {\r\n      maxWidth: 345\r\n    },\r\n\r\n    maxHeight: \"100%\"\r\n  },\r\n\r\n\r\n  paper: {\r\n    margin: \"0 auto\",\r\n    backgroundColor: theme.palette.primary.main\r\n  },\r\n\r\n  gridItem: {\r\n    marginBottom: \"75px\"\r\n  }\r\n});\r\nconst CountryCard = (props) => {\r\n    const {classes} = props\r\n \r\n  return (\r\n   \r\n    <Grid item xs={12} sm={12} md={4} lg={3} className={classes.gridItem}>\r\n      \r\n      <Card\r\n        style={{ backgroundColor: props.palette.palette.primary.main }}\r\n        className={classes.card}\r\n        classes={{ root: classes.paper }}\r\n        key={props.country.name}\r\n      >\r\n         <Link to={{\r\n           pathname: `/${props.country.name}`,\r\n           state: {\r\n             name: props.country.name,\r\n             nativeName: props.country.nativeName,\r\n             flag: props.country.flag,\r\n             population: props.country.population,\r\n             region: props.country.region,\r\n             subRegion: props.country.subregion,\r\n             capital: props.country.capital,\r\n             topLevelDomain: props.country.topLevelDomain,\r\n             currencies: props.country.currencies,\r\n             languages: props.country.languages,\r\n             borderCountries: props.country.borders\r\n\r\n           }\r\n         }}>\r\n        <CardActionArea>\r\n          <CardMedia\r\n            component=\"img\"\r\n            alt={props.country.name}\r\n            height=\"140\"\r\n            image={props.country.flag}\r\n            title={props.country.name}\r\n          />\r\n          <CardContent>\r\n            <Typography\r\n              gutterBottom\r\n              variant=\"h5\"\r\n              component=\"h2\"\r\n              color=\"textPrimary\"\r\n            >\r\n              {props.country.name}\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              <strong>Population:</strong> <NumberFormat value={props.country.population} displayType={'text'} thousandSeparator={true}/> \r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              <strong>Region:</strong> {props.country.region}\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              <strong>Capital:</strong> {props.country.capital}\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n        </Link>\r\n        <CardActions>\r\n          <Button size=\"small\">Share</Button>\r\n          <Button size=\"small\" color=\"default\">\r\n            Learn More\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(CountryCard);\r\n","import React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Button from '@material-ui/core/Button'\r\nimport { connect } from \"react-redux\";\r\nimport * as actionCreators from \"../../store/actions/index\";\r\n\r\n\r\n\r\n\r\nconst Snack = (props) => {\r\n    const handleClick = () => {\r\n        props.onClick()\r\n    }\r\n  return (\r\n    <div>\r\n   \r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\"\r\n        }}\r\n        open={true}\r\n        autoHideDuration={6000}\r\n        /*onClose={handleClose}*/\r\n        ContentProps={{\r\n          \"aria-describedby\": \"message-id\"\r\n        }}\r\n        message={<span id=\"message-id\">Country not found</span>}\r\n        action={[\r\n          <Button\r\n            key=\"undo\"\r\n            style={{color:'#61cdff'}}\r\n            size=\"small\"\r\n           onClick={handleClick}\r\n           \r\n          >\r\n            UNDO\r\n          </Button>,\r\n     \r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n    return {};\r\n  };\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      onClick: () => dispatch(actionCreators.fetchAllCountries())\r\n    };\r\n  };\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Snack);\r\n","import React from \"react\";\r\n\r\nimport CountryCard from \"../Card/CountryCard\";\r\nimport Snackbar from \"../Snackbar/Snackbar\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport * as actionCreators from \"../../store/actions/index\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nconst styles = theme => ({\r\n  card: {\r\n    [theme.breakpoints.up(\"900\")]: {\r\n      maxWidth: 255\r\n    },\r\n    [theme.breakpoints.up(\"1200\")]: {\r\n      maxWidth: 260\r\n    },\r\n    [theme.breakpoints.up(\"1300\")]: {\r\n      maxWidth: 270\r\n    },\r\n    [theme.breakpoints.up(\"1500\")]: {\r\n      maxWidth: 345\r\n    },\r\n\r\n    maxHeight: \"100%\"\r\n  },\r\n\r\n  cardsContainer: {\r\n    width: \"100vw\"\r\n  },\r\n  paper: {\r\n    margin: \"0 auto\",\r\n    backgroundColor: theme.palette.primary.main\r\n  },\r\n  gridContainer: {\r\n    backgroundColor: theme.palette.background.primary\r\n  },\r\n  gridItem: {\r\n    marginBottom: \"75px\"\r\n  }\r\n});\r\nconst Cards = props => {\r\n  console.log(props);\r\n  const { classes, palette } = props;\r\n\r\n  let countryData;\r\n  let countries = [];\r\n  if (props.name !== null) {\r\n    countryData = props.data.filter(country =>\r\n      country.name.toLocaleLowerCase().includes(props.name.toLocaleLowerCase())\r\n    );\r\n  }\r\n  console.log(\"country data is\", countryData);\r\n\r\n  if (props.loading === false && props.data !== null && props.name === null) {\r\n    countries = [];\r\n    props.data.map((country, i) => {\r\n      return countries.push(\r\n        <CountryCard country={country} palette={palette} />\r\n      );\r\n    });\r\n  } else if (props.name !== null && countryData !== undefined) {\r\n    countries = [];\r\n    countryData.map((country, i) => {\r\n      return countries.push(\r\n        <CountryCard country={country} palette={palette} />\r\n      );\r\n    });\r\n  } else {\r\n    countries = [];\r\n    countries.push(<h1>Loading...</h1>);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.cardsContainer}>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        xs={12}\r\n        className={classes.gridContainer}\r\n        color=\"primary\"\r\n      >\r\n        {  countryData!== undefined  && countryData.length === 0? (\r\n          <Snackbar />\r\n        ) : (\r\n          countries\r\n        )}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onClick: () => dispatch(actionCreators.fetchAllCountries())\r\n  };\r\n};\r\n\r\nexport default withStyles(styles)(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Cards)\r\n);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport Nav from \"../../components/Nav/Nav\";\r\nimport Form from \"../Form/Form\";\r\nimport CardsList from \"../../components/CardList/CardsList\";\r\nimport Snackbar from \"../../components/Snackbar/Snackbar\";\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\"; // CSS Baseline provides a default body backgrond color so That i can now easily change it with the button\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport * as actionCreators from \"../../store/actions/index\";\r\n\r\nclass Layout extends Component {\r\n  componentDidMount() {\r\n    this.props.onMount();\r\n  }\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider theme={createMuiTheme(this.props.palette)}>\r\n        <Container\r\n          style={{\r\n            minHeight: \"100vh\",\r\n            minWidth: \"100%\",\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            justifyContent: \"center\",\r\n            backgroundColor: this.props.palette.palette.background.primary\r\n          }}\r\n        >\r\n          <CssBaseline />\r\n          <Nav palette={this.props.palette} />\r\n          <Form palette={this.props.palette} mode={this.props.mode}  data={this.props.data}/>\r\n          {this.props.data!== null && this.props.data.status && !this.props.loading ? (\r\n            <Snackbar />\r\n          ) : (\r\n            <CardsList\r\n              name={this.props.name}\r\n              data={this.props.data}\r\n              palette={this.props.palette}\r\n              mode={this.props.mode}\r\n              loading={this.props.loading}\r\n            />\r\n          )}\r\n        </Container>\r\n        \r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    palette: state.theme.currentPalette,\r\n    mode: state.theme.lightMode,\r\n    data: state.countries.reduxData,\r\n    loading: state.countries.loading,\r\n    name: state.countries.name\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onMount: () => dispatch(actionCreators.fetchAllCountries())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Layout);\r\n","import React, { Component } from \"react\";\r\nimport { withStyles, Hidden } from \"@material-ui/core\";\r\nimport * as actionCreators from \"../../store/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport humanizeList from \"humanize-list\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Navigation from \"../../components/Nav/Nav\";\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  IconButton,\r\n  Button,\r\n  Box,\r\n  Typography\r\n} from \"@material-ui/core\";\r\n\r\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\r\nconst styles = theme => ({\r\n  container: {\r\n    minHeight: \"100vh\",\r\n    paddingTop: 80,\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      paddingTop: 120\r\n    }\r\n  },\r\n  box: {\r\n    width: 100,\r\n    marginBottom: 30,\r\n    marginLeft: 20,\r\n    height: 40,\r\n    position: \"relative\",\r\n\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.action.hover + \"!Important\"\r\n    }\r\n  },\r\n\r\n  label: {\r\n    position: \"relative\",\r\n    bottom: \"5px\"\r\n  },\r\n  link: {\r\n    textDecoration: \"none\"\r\n  },\r\n  root: {\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\"\r\n    }\r\n  },\r\n\r\n  button: {\r\n    marginTop: \"10px\"\r\n  },\r\n\r\n  CardActions: {\r\n    display: \"flex\",\r\n    flexFlow: \"row wrap\",\r\n    justifyContent: \"flex-start\",\r\n\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n      flexFlow: \"row wrap\",\r\n      margin: \"0 0 0 7%\",\r\n      overflow: \"hidden\"\r\n    }\r\n  },\r\n  ActionArea: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n      flexFlow: \"row wrap\",\r\n      justifyContent: 'end',\r\n      marginLeft: '5%'\r\n    }\r\n  },\r\n  flag: {\r\n    maxWidth: \"90%\",\r\n    height: \"auto\",\r\n    margin: \"0 auto\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      maxWidth: 360,\r\n      maxHeight: 240,\r\n      margin: \"0\"\r\n    }\r\n  },\r\n  countryInfoA: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n      flexFlow: \"row wrap\",\r\n      justifyContent: \"space-evenly\",\r\n      maxWidth: 500\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      display: \"flex\",\r\n      flexFlow: \"row wrap\",\r\n      justifyContent: \"space-evenly\",\r\n      maxWidth: 900\r\n    }\r\n  },\r\n  countryInfoB: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      alignSelf: \"center\"\r\n    }\r\n  }\r\n});\r\n\r\nclass CountryProfile extends Component {\r\n  state = {\r\n    country: null\r\n  };\r\n\r\n  handleClick = e => {\r\n    //debugger\r\n    this.props.history.listen((location, action) => {\r\n      fetch(\r\n        `https://restcountries.eu/rest/v2/alpha?codes=${this.props.history.location.pathname.substring(\r\n          1\r\n        )}`\r\n      )\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          this.setState({\r\n            country: res\r\n          });\r\n        });\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    //debugger\r\n    if (this.props.location.pathname.length > 4) {\r\n      fetch(\r\n        `https://restcountries.eu/rest/v2/name/${this.props.location.pathname.substring(\r\n          1\r\n        )}?fullText=true`\r\n      )\r\n        .then(res => {\r\n          let a = res.json();\r\n          console.log(a);\r\n          return a;\r\n        })\r\n        .then(res => {\r\n          this.setState({\r\n            country: res\r\n          });\r\n        });\r\n    } else {\r\n      fetch(\r\n        `https://restcountries.eu/rest/v2/alpha?codes=${this.props.history.location.pathname.substring(\r\n          1\r\n        )}`\r\n      )\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          this.setState({\r\n            country: res\r\n          });\r\n        });\r\n    }\r\n  }\r\n  render() {\r\n    console.log(this.state.country, \"state\");\r\n    const { classes } = this.props;\r\n    return (\r\n      <div style={{}}>\r\n        <MuiThemeProvider theme={createMuiTheme(this.props.palette)}>\r\n          <Navigation palette={this.props.palette} />\r\n          <div\r\n            className={classes.container}\r\n            style={{\r\n              backgroundColor: this.props.palette.palette.background.primary\r\n            }}\r\n          >\r\n            <Box\r\n              boxShadow={1}\r\n              className={classes.box}\r\n              style={{\r\n                backgroundColor: this.props.palette.palette.primary.main\r\n              }}\r\n            >\r\n              <IconButton\r\n                className={classes.iconButton}\r\n                disableRipple={true}\r\n                disableFocusRipple={true}\r\n                style={{\r\n                  color: this.props.palette.palette.primary.contrastText\r\n                }}\r\n                classes={{\r\n                  label: classes.label,\r\n                  root: classes.root\r\n                }}\r\n              >\r\n                <ArrowBack />\r\n                <Typography variant=\"subtitle1\" color=\"textPrimary\">\r\n                  Back\r\n                </Typography>\r\n              </IconButton>\r\n            </Box>\r\n\r\n            {this.state.country !== null\r\n              ? this.state.country.map(country => (\r\n                  <Card\r\n                    style={{\r\n                      width: \"100%\",\r\n                      minHeight: \"100vh\",\r\n                      backgroundColor: this.props.palette.palette.background\r\n                        .primary\r\n                    }}\r\n                  >\r\n                    <CardActionArea className={classes.ActionArea}>\r\n                      <CardMedia\r\n                        className={classes.flag}\r\n                        component=\"img\"\r\n                        alt={country.name}\r\n                        height=\"140\"\r\n                        image={country.flag}\r\n                        title={country.name}\r\n                      />\r\n                      <div className={classes.countryInfoA}>\r\n                        <CardContent>\r\n                          <Typography\r\n                            gutterBottom\r\n                            variant=\"h5\"\r\n                            component=\"h2\"\r\n                            color=\"textPrimary\"\r\n                          >\r\n                            {country.name}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" component=\"p\">\r\n                            <strong>Native Name:</strong> {country.nativeName}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" component=\"p\">\r\n                            <strong>Population:</strong>{\" \"}\r\n                            <NumberFormat\r\n                              value={country.population}\r\n                              displayType={\"text\"}\r\n                              thousandSeparator={true}\r\n                            />\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" component=\"p\">\r\n                            <strong>Region:</strong> {country.region}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" component=\"p\">\r\n                            <strong>Sub Region:</strong> {country.subregion}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" component=\"p\">\r\n                            <strong>Capital:</strong> {country.capital}\r\n                          </Typography>\r\n                        </CardContent>\r\n                        <CardContent className={classes.countryInfoB}>\r\n                          <Typography variant=\"body2\" component=\"p\">\r\n                            <strong>Top Level Domain:</strong>{\" \"}\r\n                            {country.topLevelDomain}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" component=\"p\">\r\n                            <strong>Currencies:</strong>{\" \"}\r\n                            {country.currencies.map(currency => currency.name)}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" component=\"p\">\r\n                            <strong>Languages:</strong>{\" \"}\r\n                            {humanizeList(\r\n                              country.languages.map(language => language.name)\r\n                            )}\r\n                          </Typography>\r\n                        </CardContent>\r\n                        <CardActions className={classes.CardActions}>\r\n                          <Typography\r\n                            variant=\"body2\"\r\n                            component=\"p\"\r\n                            style={{ minWidth: \"100vw\" }}\r\n                            color=\"textPrimary\"\r\n                          >\r\n                            <strong>Border Countries:</strong>\r\n                          </Typography>\r\n                          {country.borders.map((country, i) => (\r\n                            <Link\r\n                              className={classes.link}\r\n                              to={`/${country}`}\r\n                              onClick={e => this.handleClick(e)}\r\n                            >\r\n                              <Button\r\n                                key={i}\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                              >\r\n                                {country}\r\n                              </Button>\r\n                            </Link>\r\n                          ))}\r\n                        </CardActions>\r\n                      </div>\r\n                    </CardActionArea>\r\n                  </Card>\r\n                ))\r\n              : null}\r\n          </div>\r\n        </MuiThemeProvider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    data: state.countries.reduxData,\r\n    palette: state.theme.currentPalette,\r\n    mode: state.theme.lightMode\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchSpecificCountry: e => dispatch(actionCreators.fetchSpecficCountry(e)),\r\n    fetchCountries: data => dispatch(actionCreators.fetchAllCountries(data)),\r\n    fetchRegion: e => dispatch(actionCreators.fetchRegion(e))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(CountryProfile));\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Layout from './containers/Layout/Layout'\r\nimport CountryProfile from './containers/CountryProfile/CountryProfile'\r\nimport { HashRouter, Route, Switch } from 'react-router-dom'\r\nimport Paper from \"@material-ui/core/Paper\";\r\nfunction App() {\r\n  return (\r\n    <HashRouter>\r\n      <Switch>\r\n        <Route exact path='/' component={Layout} />\r\n        <Route exact path='/:countryName' component={CountryProfile} />\r\n      </Switch>\r\n    \r\n    </HashRouter>\r\n      \r\n  )\r\n}\r\n\r\nexport default App;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nconst initialState = {\r\n  currentPalette: {\r\n    palette: {\r\n      primary: {\r\n        light: \"#a4a4a4\",\r\n        main: `hsl(0, 0%, 100%)`,\r\n        dark: \"#494949\",\r\n        contrastText: `hsl(200, 15%, 8%)`,\r\n        inputs: \"hsl(0, 0%, 52%)\"\r\n      },\r\n      secondary: {\r\n        light: \"#819ca9\",\r\n        main: \"#546e7a\",\r\n        dark: \"#29434e\",\r\n        contrastText: \"#fff\"\r\n      },\r\n      background: {\r\n        primary: \"hsl(0, 0%, 98%)\"\r\n      },\r\n      text: {\r\n        primary: `hsl(200, 15%, 8%)`,\r\n      }\r\n    }\r\n  },\r\n\r\n  darkMode: false,\r\n  lightMode: true\r\n};\r\n\r\nconst themeReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SWITCH_THEME: {\r\n      const stateCopy = { ...state };\r\n      if (stateCopy.lightMode) {\r\n        return {\r\n          ...state,\r\n          lightMode: false,\r\n          currentPalette: {\r\n            ...state.currentPalette,\r\n            palette: {\r\n              ...state.palette,\r\n              primary: {\r\n                ...state.primary,\r\n                main: `hsl(209, 23%, 22%)`,\r\n                contrastText: `hsl(0, 0%, 100%)`\r\n              },\r\n              secondary: {\r\n                ...state.secondary,\r\n                main: '#fff',\r\n                contrastText: \"#fff\"\r\n              },\r\n              background: {\r\n                ...state.background,\r\n                primary: \"hsl(207, 26%, 17%)\"\r\n              },\r\n              text: {\r\n                ...state.text,\r\n                primary: `hsl(0, 0%, 100%)`\r\n              }\r\n            }\r\n          }\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          lightMode: true,\r\n          currentPalette: {\r\n            ...state.currentPalette,\r\n            palette: {\r\n              ...state.palette,\r\n              primary: {\r\n                ...state.primary,\r\n                main: `hsl(0, 0%, 100%)`,\r\n                contrastText: `hsl(200, 15%, 8%)`,\r\n                inputs: \"hsl(0, 0%, 52%)\"\r\n              },\r\n              secondary: {\r\n                ...state.secondary,\r\n                main: '#fff',\r\n                contrastText: \"#fff\"\r\n              },\r\n              background: {\r\n                ...state.background,\r\n                primary: \"hsl(0, 0%, 98%)\"\r\n              },\r\n              text: {\r\n                ...state.text,\r\n                primary: `hsl(200, 15%, 8%)`,\r\n              }\r\n            }\r\n          }\r\n        };\r\n      }\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default themeReducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    reduxData: null,\r\n    loading: false,\r\n    name: null,\r\n}\r\n\r\nconst countriesReducer = (state = initialState, action) => {\r\n   \r\n    switch(action.type) {\r\n        case actionTypes.COUNTRY_NAME : {\r\n            return {\r\n                ...state,\r\n                \r\n                name: action.name\r\n            }\r\n        }\r\n        case actionTypes.FETCH_BEGIN : {\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        }\r\n        case actionTypes.FETCH_SUCCESS : {\r\n            if(action.data!==  state.reduxData) {\r\n                return {\r\n                    ...state,\r\n                    reduxData: action.data,\r\n                    loading: false\r\n                }\r\n            } break;\r\n            \r\n        } default: {\r\n            return state\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default countriesReducer","import { combineReducers } from 'redux'\r\nimport theme from './themeSwitchReducer'\r\nimport countries from './fetchCountriesReducer'\r\nconst reducer = combineReducers({\r\n    theme, countries\r\n  })\r\n\r\nexport default reducer","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport Thunk from 'redux-thunk'\r\nimport rootReducer from './store/reducers/rootReducer'\r\nimport { createStore, applyMiddleware,compose } from 'redux';\r\nimport { Provider,  } from 'react-redux'\r\nimport { loadState, saveState } from './store/localstorage'\r\nconst composeEnchancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst persistedState = loadState()\r\nlet store = createStore(rootReducer, persistedState, composeEnchancers(\r\n    applyMiddleware(Thunk)\r\n))\r\nstore.subscribe(() => {\r\n    saveState(store.getState());\r\n  });\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n","    \r\nexport const loadState = () => {\r\n    try {\r\n      const serializedState = localStorage.getItem(\"state\");\r\n      if (serializedState === null) {\r\n        return undefined;\r\n      }\r\n      return JSON.parse(serializedState);\r\n    } catch (err) {\r\n      return undefined;\r\n    }\r\n  };\r\n  \r\n  export const saveState = state => {\r\n    try {\r\n      const serializedState = JSON.stringify(state);\r\n      localStorage.setItem(\"state\", serializedState);\r\n    } catch (err) {\r\n      //ignore the err\r\n    }\r\n  };","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}